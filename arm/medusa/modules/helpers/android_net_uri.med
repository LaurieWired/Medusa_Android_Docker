{
    "Name": "helpers/android_net_uri",
    "Description": "Use this module to monitor Uri operations",
    "Help": "Logs various Uri operations including query parameters, parsing e.t.c.",
    "Code": "
console.log('\\n----------URI parsing monitor by @ch0p1n------------');

var Uri = Java.use('android.net.Uri'); 

var currentUri = '';
var targetWords = ['url','path','uri','page','attachment','file','dir'];

Uri.getQueryParameter.implementation = function(key)
{
    var retval = this.getQueryParameter(key);
    if (currentUri == this.toString()){}
    else
    {
      currentUri = this.toString();
      colorLog('[+] getQueryParameter for Uri: '+currentUri,{c: Color.Green})
    }
    for(var j = 0; j < targetWords.length; j++)
    {
      if(key.toString().toLowerCase().indexOf(targetWords[j].toLocaleLowerCase())!=-1)
      {
        colorLog('\t\\\\_key:'+key+', value:'+retval, {c: Color.Red});
        break;
      }
      else
      {
        console.log('\t\\\\_key:'+key+', value:'+retval);
        break;
      }
    }
    return retval;
}

Uri.getQueryParameters.implementation = function(key){
  var retval = this.getQueryParameters(key);
  if (currentUri == this.toString()){}
  else
  {
    currentUri = this.toString();
    colorLog('[+] getQueryParameters for Uri: '+currentUri,{c: Color.Green})
  }
  for(var j = 0; j < targetWords.length; j++)
    {
      if(key.toString().toLowerCase().indexOf(targetWords[j].toLocaleLowerCase())!=-1)
      {
        colorLog('\t\\\\_key:'+key+', value:'+retval, {c: Color.Red});
        break;
      }
      else
      {
        console.log('\t\\\\_key:'+key+', value:'+retval);
        break;
      }
    }
    return retval;
}

Uri.getAuthority.implementation = function(key){
  var ret = this.getAuthority();
  colorLog('[+] getAuthority for Uri: '+this,{c: Color.Green})
  console.log('\t\\_returns:'+ret);
  return ret;
}

Uri.getHost.implementation = function(key){
  var ret = this.getHost();
  colorLog('[+] getHost for Uri: '+this,{c: Color.Green})
  console.log('\t\\_returns:'+ret);
  return ret;
}

Uri.getScheme.implementation = function(key){
  var ret = this.getScheme();
  colorLog('[+] getScheme for Uri: '+this,{c: Color.Cyan})
  console.log('\t\\_returns:'+ret);
  return ret;
}


"
}
