{
    "Name": "backdoor/backdoor_calls",
    "Description": "Use this module to monitor api calls common for backdoor malware",
    "Help": "Includes hooks to:\n-Runtime exec\n-Dynamic code loading",
    "Code": "console.log('\\n\\n--------------Backdoor monitor by @Ch0pin-----------');

    var targetClass = Java.use(\"java.lang.Runtime\");

    targetClass.exec.overload('java.lang.String').implementation = function (x) {
        console.log(\"[*] exec() called!: \"+x);
        return this.exec(x);
    };

    targetClass.exec.overload('[Ljava.lang.String;').implementation = function (x) {
        console.log(\"[*] exec() called!: \"+x);
        return this.exec(x);
    };

    targetClass.exec.overload('java.lang.String', '[Ljava.lang.String;').implementation = function (x,y) {
        console.log(\"[*] exec() called X= \"+x);
        console.log(\"[*] exec() called Y= \"+y);
        return this.exec(x,y);
    };

    targetClass.exec.overload('[Ljava.lang.String;', '[Ljava.lang.String;').implementation = function (x,y) {
        console.log(\"[*] exec() called X= \"+x);
        console.log(\"[*] exec() called Y= \"+y);
        return this.exec(x,y);
    };

    targetClass.exec.overload('[Ljava.lang.String;', '[Ljava.lang.String;', 'java.io.File').implementation = function (x,y,z) {
        console.log(\"[*] exec() called X= \"+x);
        console.log(\"[*] exec() called Y= \"+y);
        console.log(\"[*] exec() called Z= \"+z);
        return this.exec(x,y,z);
    };

    targetClass.exec.overload('java.lang.String', '[Ljava.lang.String;', 'java.io.File').implementation = function (x,y,z) {
        console.log(\"[*] exec() called X= \"+x);
        console.log(\"[*] exec() called Y= \"+y);
        console.log(\"[*] exec() called Z= \"+z);
        return this.exec(x,y,z);
    };
    "
}
