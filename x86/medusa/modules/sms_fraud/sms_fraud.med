{
    "Name": "sms_fraud/sms_fraud",
    "Description": "Detects calls to API functions which are common for sms fraud fraud malware",
    "Help": "hooks:sendTextMessage, sendMultimediaMessage, sendMultipartTextMessage, createFromPdu",
    "Code": "
console.log('\\n\\n--------SMS Fraud Detection module by @ch0pin---------------');

var smsManager = Java.use('android.telephony.SmsManager');
var smsMessage = Java.use('android.telephony.SmsMessage');

smsMessage.createFromPdu.overloads[0].implementation = function(pdu){
    console.log('[+] Create from Pdu called:');
    displayString(pdu);
    return this.createFromPdu(pdu);
}
smsMessage.createFromPdu.overloads[1].implementation = function(pdu,format){
    console.log('[+] Create from Pdu called:');
    console.log('[+] Format: '+ format)
    displayString(pdu);
    return this.createFromPdu(pdu,format);
}

smsManager.sendMultipartTextMessage.overloads[0].implementation = function(destinationAddress,  scAddress,  parts,  sentIntents,  deliveryIntents){
    console.log('[+] Send multimedia message called');
    console.log('Destination address: ' + destinationAddress);
    console.log('Source address: '+scAddress);
    console.log('Text message:\\n');
    var iter = parts.iterator();
    while(iter.hasNext()) {
        console.log(iter.next());
    }
    this.sendMultipartTextMessage(destinationAddress,  scAddress,  parts,  sentIntents,  deliveryIntents);
}

smsManager.sendMultipartTextMessage.overloads[1].implementation = function(destinationAddress,  scAddress,  parts,  sentIntents,  deliveryIntents,messageId){
    console.log('[+] Send multimedia message called');
    console.log('Destination address: ' + destinationAddress);
    console.log('Source address: '+scAddress);
    console.log('Message Id: '+messageId);
    console.log('Text message:\\n');
    var iter = parts.iterator();
    while(iter.hasNext()) {
        console.log(iter.next());
    }
    this.sendMultipartTextMessage(destinationAddress,  scAddress,  parts,  sentIntents,  deliveryIntents);
}
// smsManager.sendMultipartTextMessage.overloads[2].implementation = function(destinationAddress,  scAddress,  parts,  sentIntents,  deliveryIntents,packageName,attributionTag){
//     console.log('[+] Send multimedia message called');
//     console.log('Destination address: ' + destinationAddress);
//     console.log('Source address: '+scAddress);
//     console.log('Package Name: '+packageName);
//     console.log('Text message:\\n');
//     var iter = parts.iterator();
//     while(iter.hasNext()) {
//         console.log(iter.next());
//     }
//     this.sendMultipartTextMessage(destinationAddress,  scAddress,  parts,  sentIntents,  deliveryIntents,packageName,attributionTag);
// }

smsManager.sendMultimediaMessage.implementation = function(context,uri,locationurl,configoverrides,pendingIntent){
    console.log('[+] Send multimedia message called');
    console.log('Uri from which the message pdu will be read: ' + uri);
    console.log('Location url where message should be sent to: '+locationurl);
    this.sendMultimediaMessage(context,uri,locationurl,configoverrides,pendingIntent);
}
smsManager.sendTextMessage.overloads[0].implementation = function(destinationAddress, scAddress, text,pendingIntent, deliveryIntent){

    console.log('[+] Send Text message called');
    console.log('Destination Address: ' + destinationAddress);
    console.log('Source Address: '+scAddress);
    console.log('Text: '+text);
    this.sendTextMesssage(destinationAddress,scAddress,text,pendingIntent,deliveryIntent);

}

smsManager.sendTextMessage.overloads[1].implementation = function(destinationAddress, scAddress, text,pendingIntent, deliveryIntent,messageId){

    console.log('[+] Send Text message called');
    console.log('Destination Address: ' + destinationAddress);
    console.log('Source Address: '+scAddress);
    console.log('Text: '+text);
    console.log('Message Id: '+messageId);
    this.sendTextMesssage(destinationAddress,scAddress,text,pendingIntent,deliveryIntent,messageId);

}


// smsManager.sendTextMessageWithoutPersisting.implementation = function(destinationAddress, scAddress, text,pendingIntent, deliveryIntent){

//     console.log('[+] Send Text message called');
//     console.log('Destination Address: ' + destinationAddress);
//     console.log('Source Address: '+scAddress);
//     console.log('Text: '+text);
//     this.sendTextMessageWithoutPersisting(destinationAddress,scAddress,text,pendingIntent,deliveryIntent);

// }
"
}
